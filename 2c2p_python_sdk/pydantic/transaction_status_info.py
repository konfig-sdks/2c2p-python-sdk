# coding: utf-8

"""
    PGW Payment API 4.3

    Rest API for PGW payment purpose - LATEST

    The version of the OpenAPI document: 4.3
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from 2c2p_python_sdk.pydantic.transaction_status_loyalty_info import TransactionStatusLoyaltyInfo

class TransactionStatusInfo(BaseModel):
    description: typing.Optional[typing.Optional[str]] = Field(None, alias='description')

    date_time: typing.Optional[typing.Optional[str]] = Field(None, alias='dateTime')

    agent_code: typing.Optional[typing.Optional[str]] = Field(None, alias='agentCode')

    channel_code: typing.Optional[typing.Optional[str]] = Field(None, alias='channelCode')

    data: typing.Optional[typing.Optional[str]] = Field(None, alias='data')

    amount: typing.Optional[typing.Optional[str]] = Field(None, alias='amount')

    currency_code: typing.Optional[typing.Optional[str]] = Field(None, alias='currencyCode')

    invoice_no: typing.Optional[typing.Optional[str]] = Field(None, alias='invoiceNo')

    installment_period: typing.Optional[typing.Optional[int]] = Field(None, alias='installmentPeriod')

    pay_later_period: typing.Optional[typing.Optional[int]] = Field(None, alias='payLaterPeriod')

    interest_type: typing.Optional[typing.Optional[str]] = Field(None, alias='interestType')

    interest_rate: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='interestRate')

    monthly_payment: typing.Optional[typing.Optional[str]] = Field(None, alias='monthlyPayment')

    ipp_additional_info: typing.Optional[typing.Optional[str]] = Field(None, alias='ippAdditionalInfo')

    remainder_charge_mode: typing.Optional[typing.Optional[str]] = Field(None, alias='remainderChargeMode')

    remainder_charge_amount: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='remainderChargeAmount')

    loyalty_points: typing.Optional[typing.Optional[typing.List[TransactionStatusLoyaltyInfo]]] = Field(None, alias='loyaltyPoints')
    class Config:
        arbitrary_types_allowed = True
