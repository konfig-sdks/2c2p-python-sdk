# coding: utf-8
"""
    PGW Payment API 4.3

    Rest API for PGW payment purpose - LATEST

    The version of the OpenAPI document: 4.3
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from 2c2p_python_sdk.client_custom import ClientCustom
from 2c2p_python_sdk.configuration import Configuration
from 2c2p_python_sdk.api_client import ApiClient
from 2c2p_python_sdk.type_util import copy_signature
from 2c2p_python_sdk.apis.tags.apple_pay_api import ApplePayApi
from 2c2p_python_sdk.apis.tags.cache_api import CacheApi
from 2c2p_python_sdk.apis.tags.cancel_transaction_api import CancelTransactionApi
from 2c2p_python_sdk.apis.tags.card_installment_plan_info_api import CardInstallmentPlanInfoApi
from 2c2p_python_sdk.apis.tags.card_token_info_api import CardTokenInfoApi
from 2c2p_python_sdk.apis.tags.exchange_rate_api import ExchangeRateApi
from 2c2p_python_sdk.apis.tags.initialization_api import InitializationApi
from 2c2p_python_sdk.apis.tags.loyalty_point_info_api import LoyaltyPointInfoApi
from 2c2p_python_sdk.apis.tags.payment_api import PaymentApi
from 2c2p_python_sdk.apis.tags.payment_inquiry_api import PaymentInquiryApi
from 2c2p_python_sdk.apis.tags.payment_instruction_api import PaymentInstructionApi
from 2c2p_python_sdk.apis.tags.payment_notification_api import PaymentNotificationApi
from 2c2p_python_sdk.apis.tags.payment_option_api import PaymentOptionApi
from 2c2p_python_sdk.apis.tags.payment_option_details_api import PaymentOptionDetailsApi
from 2c2p_python_sdk.apis.tags.payment_simulate_api import PaymentSimulateApi
from 2c2p_python_sdk.apis.tags.payment_token_api import PaymentTokenApi
from 2c2p_python_sdk.apis.tags.redirect_back_end_api import RedirectBackEndApi
from 2c2p_python_sdk.apis.tags.redirect_front_end_api import RedirectFrontEndApi
from 2c2p_python_sdk.apis.tags.transaction_status_api import TransactionStatusApi
from 2c2p_python_sdk.apis.tags.user_preference_api import UserPreferenceApi



class 2C2P(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.apple_pay: ApplePayApi = ApplePayApi(api_client)
        self.cache: CacheApi = CacheApi(api_client)
        self.cancel_transaction: CancelTransactionApi = CancelTransactionApi(api_client)
        self.card_installment_plan_info: CardInstallmentPlanInfoApi = CardInstallmentPlanInfoApi(api_client)
        self.card_token_info: CardTokenInfoApi = CardTokenInfoApi(api_client)
        self.exchange_rate: ExchangeRateApi = ExchangeRateApi(api_client)
        self.initialization: InitializationApi = InitializationApi(api_client)
        self.loyalty_point_info: LoyaltyPointInfoApi = LoyaltyPointInfoApi(api_client)
        self.payment: PaymentApi = PaymentApi(api_client)
        self.payment_inquiry: PaymentInquiryApi = PaymentInquiryApi(api_client)
        self.payment_instruction: PaymentInstructionApi = PaymentInstructionApi(api_client)
        self.payment_notification: PaymentNotificationApi = PaymentNotificationApi(api_client)
        self.payment_option: PaymentOptionApi = PaymentOptionApi(api_client)
        self.payment_option_details: PaymentOptionDetailsApi = PaymentOptionDetailsApi(api_client)
        self.payment_simulate: PaymentSimulateApi = PaymentSimulateApi(api_client)
        self.payment_token: PaymentTokenApi = PaymentTokenApi(api_client)
        self.redirect_back_end: RedirectBackEndApi = RedirectBackEndApi(api_client)
        self.redirect_front_end: RedirectFrontEndApi = RedirectFrontEndApi(api_client)
        self.transaction_status: TransactionStatusApi = TransactionStatusApi(api_client)
        self.user_preference: UserPreferenceApi = UserPreferenceApi(api_client)
