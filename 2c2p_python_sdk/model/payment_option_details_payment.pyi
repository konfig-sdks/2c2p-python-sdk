# coding: utf-8

"""
    PGW Payment API 4.3

    Rest API for PGW payment purpose - LATEST

    The version of the OpenAPI document: 4.3
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from 2c2p_python_sdk import schemas  # noqa: F401


class PaymentOptionDetailsPayment(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def info() -> typing.Type['PaymentOptionDetailsInfo']:
                return PaymentOptionDetailsInfo
        
            @staticmethod
            def code() -> typing.Type['PaymentOptionDetailsPaymentCode']:
                return PaymentOptionDetailsPaymentCode
        
            @staticmethod
            def input() -> typing.Type['PaymentOptionDetailsPaymentInput']:
                return PaymentOptionDetailsPaymentInput
        
            @staticmethod
            def validation() -> typing.Type['PaymentOptionDetailsPaymentValidation']:
                return PaymentOptionDetailsPaymentValidation
            __annotations__ = {
                "info": info,
                "code": code,
                "input": input,
                "validation": validation,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["info"]) -> 'PaymentOptionDetailsInfo': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["code"]) -> 'PaymentOptionDetailsPaymentCode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["input"]) -> 'PaymentOptionDetailsPaymentInput': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["validation"]) -> 'PaymentOptionDetailsPaymentValidation': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["info", "code", "input", "validation", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["info"]) -> typing.Union['PaymentOptionDetailsInfo', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["code"]) -> typing.Union['PaymentOptionDetailsPaymentCode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["input"]) -> typing.Union['PaymentOptionDetailsPaymentInput', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["validation"]) -> typing.Union['PaymentOptionDetailsPaymentValidation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["info", "code", "input", "validation", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        info: typing.Union['PaymentOptionDetailsInfo', schemas.Unset] = schemas.unset,
        code: typing.Union['PaymentOptionDetailsPaymentCode', schemas.Unset] = schemas.unset,
        input: typing.Union['PaymentOptionDetailsPaymentInput', schemas.Unset] = schemas.unset,
        validation: typing.Union['PaymentOptionDetailsPaymentValidation', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PaymentOptionDetailsPayment':
        return super().__new__(
            cls,
            *args,
            info=info,
            code=code,
            input=input,
            validation=validation,
            _configuration=_configuration,
            **kwargs,
        )

from 2c2p_python_sdk.model.payment_option_details_info import PaymentOptionDetailsInfo
from 2c2p_python_sdk.model.payment_option_details_payment_code import PaymentOptionDetailsPaymentCode
from 2c2p_python_sdk.model.payment_option_details_payment_input import PaymentOptionDetailsPaymentInput
from 2c2p_python_sdk.model.payment_option_details_payment_validation import PaymentOptionDetailsPaymentValidation
